X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=S[k]%%12
i=((S[k]-j)/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=S[k]%%12
i=((S[k]-j)/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=S[k]%%12
i=((S[k]-j)/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
121%%12
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
m=1000
F=0
n=82
for(a in 1:m){
S=sample(1:144,n,replace=TRUE)
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
y.obs=rowSums(X)
x.obs=colSums(X)
q.obs=0
for(r in 1:12){
for(s in 1:12){
q.obs=q.obs+((X[r,s]-(x.obs[r]*y.obs[s])/n)^2)/((x.obs[r]*y.obs[s])/n)
}
}
q.obs
F[a]=q.obs
}
F
n=82
g=12
OBS=matrix(c(1,0,0,0,1,2,0,0,1,0,1,0,
1,0,0,1,0,0,0,0,0,1,0,2,
1,0,0,0,2,1,0,0,0,0,0,1,
3,0,2,0,0,0,1,0,1,3,1,1,
2,1,1,1,1,1,1,1,1,1,1,0,
2,0,0,0,1,0,0,0,0,0,0,0,
2,0,2,1,0,0,0,0,1,1,1,2,
0,0,0,3,0,0,1,0,0,1,0,2,
0,0,0,1,1,0,0,0,0,0,1,0,
1,1,0,2,0,0,1,0,0,1,1,0,
0,1,1,1,2,0,0,2,0,1,1,0,
0,1,1,0,0,0,1,0,0,0,0,0), byrow=T,nrow=g)
OBS
y.obs=rowSums(OBS)
y.obs
x.obs=colSums(OBS)
x.obs
q.obs=0
for(i in 1:12){
for(j in 1:12){
q.obs=q.obs+((OBS[i,j]-(x.obs[i]*y.obs[j])/n)^2)/((x.obs[i]*y.obs[j])/n)
}
}
q.obs
T=OBS
for(i in 1:12){
for(j in 1:12){
T[i,j]=x.obs[i]*y.obs[j]/n
}
}
T
P=OBS/n
P
S=sample(1:144,n,replace=TRUE,P)
X=OBS*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
X
m=1000
F=0
for(a in 1:m){
S=sample(1:144,n,replace=TRUE,P)
X=OBS*0
for(k in 1:144){
j=S[k]%%12
i=(S[k]-j)/12
X[i,j]=1+X[i,j]
}
Y=((X-T)^2)/T
F[a]=sum(Y)
}
plot(ecdf(F))
H=rchisq(m, 121)
lines(ecdf(H))
n=82
g=12
OBS=matrix(c(1,0,0,0,1,2,0,0,1,0,1,0,
1,0,0,1,0,0,0,0,0,1,0,2,
1,0,0,0,2,1,0,0,0,0,0,1,
3,0,2,0,0,0,1,0,1,3,1,1,
2,1,1,1,1,1,1,1,1,1,1,0,
2,0,0,0,1,0,0,0,0,0,0,0,
2,0,2,1,0,0,0,0,1,1,1,2,
0,0,0,3,0,0,1,0,0,1,0,2,
0,0,0,1,1,0,0,0,0,0,1,0,
1,1,0,2,0,0,1,0,0,1,1,0,
0,1,1,1,2,0,0,2,0,1,1,0,
0,1,1,0,0,0,1,0,0,0,0,0), byrow=T,nrow=g)
OBS
y.obs=rowSums(OBS)
y.obs
x.obs=colSums(OBS)
x.obs
q.obs=0
for(i in 1:12){
for(j in 1:12){
q.obs=q.obs+((OBS[i,j]-(x.obs[i]*y.obs[j])/n)^2)/((x.obs[i]*y.obs[j])/n)
}
}
q.obs
T=OBS
for(i in 1:12){
for(j in 1:12){
T[i,j]=x.obs[i]*y.obs[j]/n
}
}
T
P=OBS/n
P
S=sample(1:144,n,replace=TRUE,P)
X=OBS*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
X
m=1000
F=0
for(a in 1:m){
S=sample(1:144,n,replace=TRUE,P)
X=OBS*0
for(k in 1:144){
j=S[k]%%12
i=(S[k]-j)/12
X[i,j]=1+X[i,j]
}
Y=((X-T)^2)/T
F[a]=sum(Y)
}
plot(ecdf(F))
H=rchisq(m, 121)
lines(ecdf(H))
n=82
g=12
OBS=matrix(c(1,0,0,0,1,2,0,0,1,0,1,0,
1,0,0,1,0,0,0,0,0,1,0,2,
1,0,0,0,2,1,0,0,0,0,0,1,
3,0,2,0,0,0,1,0,1,3,1,1,
2,1,1,1,1,1,1,1,1,1,1,0,
2,0,0,0,1,0,0,0,0,0,0,0,
2,0,2,1,0,0,0,0,1,1,1,2,
0,0,0,3,0,0,1,0,0,1,0,2,
0,0,0,1,1,0,0,0,0,0,1,0,
1,1,0,2,0,0,1,0,0,1,1,0,
0,1,1,1,2,0,0,2,0,1,1,0,
0,1,1,0,0,0,1,0,0,0,0,0), byrow=T,nrow=g)
OBS
y.obs=rowSums(OBS)
y.obs
x.obs=colSums(OBS)
x.obs
q.obs=0
for(i in 1:12){
for(j in 1:12){
q.obs=q.obs+((OBS[i,j]-(x.obs[i]*y.obs[j])/n)^2)/((x.obs[i]*y.obs[j])/n)
}
}
q.obs
T=OBS
for(i in 1:12){
for(j in 1:12){
T[i,j]=x.obs[i]*y.obs[j]/n
}
}
T
P=OBS/n
P
S=sample(1:144,n,replace=TRUE,P)
X=OBS*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
X
m=1000
F=0
for(a in 1:m){
S=sample(1:144,n,replace=TRUE,P)
X=OBS*0
for(k in 1:144){
j=S[k]%%12
i=(S[k]-j)/12
X[i,j]=1+X[i,j]
}
Y=((X-T)^2)/T
F[a]=sum(Y)
}
plot(ecdf(F))
H=rchisq(m, 121)
lines(ecdf(H))
OBS=matrix(c(1,0,0,0,1,2,0,0,1,0,1,0,
1,0,0,1,0,0,0,0,0,1,0,2,
1,0,0,0,2,1,0,0,0,0,0,1,
3,0,2,0,0,0,1,0,1,3,1,1,
2,1,1,1,1,1,1,1,1,1,1,0,
2,0,0,0,1,0,0,0,0,0,0,0,
2,0,2,1,0,0,0,0,1,1,1,2,
0,0,0,3,0,0,1,0,0,1,0,2,
0,0,0,1,1,0,0,0,0,0,1,0,
1,1,0,2,0,0,1,0,0,1,1,0,
0,1,1,1,2,0,0,2,0,1,1,0,
0,1,1,0,0,0,1,0,0,0,0,0), byrow=T,nrow=g)
P=OBS/n
m=1000
F=0
n=82
for(a in 1:m){
S=sample(1:144,n,replace=TRUE,c(P))
X=matrix(1:144,ncol=12)*0
for(k in 1:144){
j=(S[k]%%12)+1
i=((S[k]-(j-1))/12)+1
X[i,j]=1+X[i,j]
}
sum(X)
length(S)
y.obs=rowSums(X)
x.obs=colSums(X)
q.obs=0
for(r in 1:12){
for(s in 1:12){
q.obs=q.obs+((X[r,s]-(x.obs[r]*y.obs[s])/n)^2)/((x.obs[r]*y.obs[s])/n)
}
}
q.obs
F[a]=q.obs
}
F
plot(ecdf(F))
H=rchisq(m, 121)
lines(ecdf(H))
q()
pollutantmean("specdata", "nitrate", 23)
q()
install.packages("shiny")
 library(shiny)
runExample("01_hello")
q()
q()
install.packages("ROAuth")
install.packages("twitteR")
install.packages("wordcloud")
install.packages("tm")
install.packages('RColorBrewer')
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
devtools::install_github('rstudio/shinyapps')
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
library(devtools)
install.packages('devtools')}
install.packages('devtools')
library(devtools)
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
deployApp()
q()
